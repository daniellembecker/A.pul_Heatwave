# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
#Install and Load necessary libraries
if("lubridate" %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')
if("tidyverse" %in% rownames(installed.packages()) == 'FALSE') install.packages('tidyverse')
if("emmeans" %in% rownames(installed.packages()) == 'FALSE') install.packages('emmeans')
if("gridExtra" %in% rownames(installed.packages()) == 'FALSE') install.packages('gridExtra')
library(lubridate)
library(tidyverse)
library(emmeans)
library(gridExtra)
# Chunk 2
##### CONTINUOUS TEMPERATURE DATA FROM HOBO LOGGERS #####
##### QC Hobo Files #####
# Read in temp data
control <- read.csv("data/environmental/loggers/larvae/cohort20221018/21347297_Controltank1_20221027readout.csv", sep=",", skip=c(6), header=FALSE, na.strings = "NA")[ ,2:4]
ramp <- read.csv("data/environmental/loggers/larvae/cohort20221018/21347301_ramptank1_20221027readout.csv", sep=",", skip=c(6), header=FALSE, na.strings = "NA")[ ,2:4]
ramp <- ramp[1:nrow(control),]
control$Tank <- "control"
ramp$Tank <- "ramp"
data <- rbind(control,ramp)
colnames(data) <- c("Date.Time", "Temp", "Light", "Tank")
data$Date.Time <- parse_date_time(data$Date.Time, "%m-%d-%Y %H:%M:%S", tz = "UTC")
write.csv(data,file="output/larval_exposure_temp.csv")
#filter for first two days of tanks
data.filtered <-data %>%
filter(!(Date.Time < "2022-10-25 04:00:00")) %>%
filter(!(Date.Time > "2022-10-27 08:00:00"))
#temp data across date summarized, remove NAs from temp
data.subset.mean.temp <- data.filtered %>%
group_by(Date.Time, Tank) %>% #tells to group by treatment
summarise(mean=mean(Temp, na.rm=TRUE), se=sd(Temp, na.rm=TRUE)/sqrt(n())) #calculates mean and se
data.subset.mean.temp
#plot mean temp per day by date
#use scale_x_datetime code to implement hours from 1-52 on x axis
temps <- data.subset.mean.temp %>%
ggplot(aes(x = Date.Time, y = mean, color = Tank)) +
#geom_line() +
geom_point() +
scale_x_datetime(breaks = seq(from = min(data.subset.mean.temp$Date.Time),
to = max(data.subset.mean.temp$Date.Time),
by = "3 hour"),
labels = function(dt) {
rel_hour <- as.numeric(difftime(dt, as.POSIXct("2022-10-25 09:00:00"), units = "hours"))
rel_hour <- ifelse(is.na(rel_hour),
data.subset.mean.temp$relative_hours[!is.na(data.subset.mean.temp$relative_hours)][1],
rel_hour)
rel_hour <- ceiling(rel_hour) + 5
return(paste("", rel_hour))
}) +
scale_color_manual(breaks = c("control", "ramp"),
values = c("blue", "red"),
labels = function(x) str_to_title(x)) + #add to capitalize                       first letter in legend
theme_classic() +
theme(axis.text.x = element_text(angle = 0)) +  # Rotate text vertically
ylab("Temperature (Â°C)") +
xlab("Hour") +  # Change x-axis label
theme(axis.title = element_text(face = "bold", size = 60),
axis.text = element_text(size = 60, color = "black"),
legend.title = element_text(size = 60, face = "bold"),
legend.text = element_text(size = 60)) +
guides(color = guide_legend(override.aes = list(size = 6))); temps
ggsave("output/larval.exposure.temps.png", plot = temps, width = 20, height = 12)
ggsave("output/larval.exposure.temps.pdf", plot = temps, width = 20, height = 12)
