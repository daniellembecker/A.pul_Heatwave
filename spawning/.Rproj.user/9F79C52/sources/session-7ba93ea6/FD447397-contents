---
title: "Analyzing larval and parental environmental data"
author: "Danielle M Becker"
date: "11/20/2023"
output: 
  html_document:
    code_folding: hide
    toc: yes
    toc_depth: 6
    toc_float: yes
editor_options: 
  chunk_output_type: console
---

This script reads and plots environmental data from Hobo pendant loggers and daily measurements.  

# Set Up    

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

```{r}
library(tidyverse)
library(stringr)
library(readxl)
library(purrr)
library(lubridate)
library(ggplot2)
library(seacarb)
library(broom)
library(cowplot)
```

# Daily measurements  

## Read in file for larval rearing period

Read in daily measurements file for larval tanks first.  

```{r}
daily.larvae<-read_csv("data/environmental/daily.measurements/larval.tanks/larval_tank_daily_measurements.csv")
daily.larvae$date<-as.Date(daily.larvae$date, format="%m/%d/%y")
daily.larvae$tank<-as.factor(daily.larvae$tank)
daily.larvae$tris.date<-as.character(daily.larvae$tris.date)
```

## Correct salinity values  

The salinity probe was calibrated on 20221026 by HP to 1000 uS/cm standard. The measurements before this date need to be corrected by applying a multiplication factor to all measurements before 20221026.  

```{r}
#calculate the average salinity values before and after the calibration 
before<-daily.larvae%>%
  filter(date<"2022-10-26")%>%
  summarise(correction=mean(sal.psu)); before 
#before = 38.2

after<-daily.larvae%>%
  filter(date>"2022-10-25")%>%
  summarise(correction=mean(sal.psu)); after 
#after=35.1

correction<-before-after; correction
#correction of 3.17 psu
```

Apply the correction by subtracting the value from all measurements before 2022-10-26. 
```{r}
daily.larvae <- daily.larvae%>%
  mutate(sal.psu.cor=ifelse(date<"2022-10-26", sal.psu-correction$correction, sal.psu))
```

We will now use sal.psu.cor for future analyses.  

## Calculate pH  

Calculate the calibration curve from the Tris calibration and calculate pH on the total scale from pH.mV.   
```{r}
pHcalib<-read_csv("data/environmental/20220924_Tris_Calibration.csv")
pHcalib$tris.date<-as.character(pHcalib$tris.date)

pHSlope<-pHcalib %>%
  nest_by(tris.date)%>%
  mutate(fitpH = list(lm(mVTris~TTris, data = pHcalib))) %>% # linear regression of mV and temp of the tris
  summarise(broom::tidy(fitpH)) %>% # make the output tidy
  select(tris.date, term, estimate) %>%
  pivot_wider(names_from = term, values_from = estimate) %>%# put slope and intercept in their own column
  left_join(daily.larvae, ., by="tris.date") %>% # join with the pH sample data
  mutate(mVTris = temp.C*TTris + `(Intercept)`) %>%# calculate the mV of the tris at temperature in which the pH of the tanks were measured
  mutate(pH = pH(Ex=pH.mV,Etris=mVTris,S=sal.psu.cor,T=temp.C)) # calculate pH of the tanks using the pH seacarb function

```

pH is now calculated as Total pH in the "pH" column. Now select the desired columns to analyze further.  

```{r}
daily_calc_larvae<-pHSlope%>%
  select(date, time, tank, temp.C, pH, sal.psu.cor, flow.mL.5s, par)
```

## Calculate flow  

Calculate flow to total mL per minute rather than 5 sec.  
```{r}
daily_calc_larvae<-daily_calc_larvae%>%
  mutate(flow.L.min=(flow.mL.5s*12)/1000)%>%
  select(!flow.mL.5s)
```


## Change to long format

Change data format to long format 
```{r}
daily_calc.long_larvae <-daily_calc_larvae %>% pivot_longer(cols=temp.C:flow.L.min,
  names_to = "metric",
  values_to = "value")
```

## Plot metrics of interest  

Plot by tank.      
```{r}
daily_tanks_larvae <- daily_calc.long_larvae %>%
  ggplot(aes(x=date, y=value)) +
  geom_point(size=2) +
  xlab("Date") +
  facet_grid(metric ~ ., scales = "free") +
  scale_fill_brewer(palette = "Dark2") +
  theme_bw() +
  ggtitle("Environmental Conditions in Larval Rearing Tanks"); daily_tanks_larvae
  
ggsave(filename="figures/environmental/tank_daily_measurements_larval_rearing.png", plot=daily_tanks_larvae, dpi=300, width=6, height=8, units="in")

```

## Test for differences between tanks for larval rearing

Obtain a short format dataset.  
```{r}
daily_calc.short_larvae<-daily_calc.long_larvae%>%
  spread(metric, value)
```

Test for differences between metrics in larval tanks during the rearing period.  
```{r}
daily_calc.short_larvae%>%
  filter(date>"2022-10-19")%>%
  aov(temp.C~tank, data=.)%>%
  summary()
#no difference 

daily_calc.short_larvae%>%
  filter(date>"2022-10-19")%>%
  aov(pH~tank, data=.)%>%
  summary()
#no difference 

daily_calc.short_larvae%>%
  filter(date>"2022-10-19")%>%
  aov(sal.psu.cor~tank, data=.)%>%
  summary()
#no difference 

daily_calc.short_larvae%>%
  filter(date>"2022-10-19")%>%
  aov(par~tank, data=.)%>%
  summary()
#no difference

daily_calc.short_larvae%>%
  filter(date>"2022-10-19")%>%
  aov(flow.L.min~tank, data=.)%>%
  summary()
#no difference 
```

There is no difference between tanks for the larvae rearing period at ambient.


## Read in file for parental spawning period

Read in daily measurements file for parental tanks first.  

```{r}
daily.parental<-read_csv("data/environmental/daily.measurements/parental.tanks/parental_tank_daily_measurements.csv")
daily.parental$date<-as.Date(daily.parental$date, format="%m/%d/%y")
daily.parental$tank<-as.factor(daily.parental$tank)
daily.parental$tris.date<-as.character(daily.parental$tris.date)
```

## Correct salinity values  

The salinity probe was calibrated on 20221026 by HP to 1000 uS/cm standard. The measurements before this date need to be corrected by applying a multiplication factor to all measurements before 20221026.  

Apply the correction by subtracting the value from all measurements before 2022-10-26. 
```{r}
daily.parental <- daily.parental%>%
  mutate(sal.psu.cor=ifelse(date<"2022-10-26", sal.psu-correction$correction, sal.psu))
```

We will now use sal.psu.cor for future analyses.  

## Calculate pH  

Calculate the calibration curve from the Tris calibration and calculate pH on the total scale from pH.mV.   
```{r}
pHcalib<-read_csv("data/environmental/20221011_Tris_Calibration.csv")
pHcalib$tris.date<-as.character(pHcalib$tris.date)

pHSlope<-pHcalib %>%
  nest_by(tris.date)%>%
  mutate(fitpH = list(lm(mVTris~TTris, data = pHcalib))) %>% # linear regression of mV and temp of the tris
  summarise(broom::tidy(fitpH)) %>% # make the output tidy
  select(tris.date, term, estimate) %>%
  pivot_wider(names_from = term, values_from = estimate) %>%# put slope and intercept in their own column
  left_join(daily.parental, ., by="tris.date") %>% # join with the pH sample data
  mutate(mVTris = temp.C*TTris + `(Intercept)`) %>%# calculate the mV of the tris at temperature in which the pH of the tanks were measured
  mutate(pH = pH(Ex=pH.mV,Etris=mVTris,S=sal.psu.cor,T=temp.C)) # calculate pH of the tanks using the pH seacarb function

```

pH is now calculated as Total pH in the "pH" column. Now select the desired columns to analyze further.  

```{r}
daily_calc_parental<-pHSlope%>%
  select(date, time, tank, temp.C, pH, sal.psu.cor, flow.mL.5s, par.center)
```

## Calculate flow  

Calculate flow to total mL per minute rather than 5 sec.  
```{r}
daily_calc_parental<-daily_calc_parental%>%
  mutate(flow.L.min=(flow.mL.5s*12)/1000)%>%
  select(!flow.mL.5s)
```


## Change to long format

Change data format to long format 
```{r}
daily_calc.long_parental <-daily_calc_parental %>% pivot_longer(cols=temp.C:flow.L.min,
  names_to = "metric",
  values_to = "value")
```

## Plot metrics of interest  

Plot by tank.      
```{r}
daily_tanks_parental <- daily_calc.long_parental %>%
  ggplot(aes(x=date, y=value)) +
  geom_point(size=2) +
  xlab("Date") +
  facet_grid(metric ~ ., scales = "free") +
  scale_fill_brewer(palette = "Dark2") +
  theme_bw() +
  ggtitle("Environmental Conditions in Parental Holding Tanks"); daily_tanks_parental
  
ggsave(filename="figures/environmental/tank_daily_measurements_parental_holding.png", plot=daily_tanks_parental, dpi=300, width=6, height=8, units="in")

```

## Test for differences between tanks for parental rearing

Obtain a short format dataset.  
```{r}
daily_calc.short_parental<-daily_calc.long_parental%>%
  spread(metric, value)
```

Test for differences between metrics in tanks during the holding period.  
```{r}
daily_calc.short_parental%>%
  filter(date>"2022-10-13")%>%
  aov(temp.C~tank, data=.)%>%
  summary()
#no difference 

daily_calc.short_parental%>%
  filter(date>"2022-10-13")%>%
  aov(pH~tank, data=.)%>%
  summary()
#no difference 

daily_calc.short_parental%>%
  filter(date>"2022-10-13")%>%
  aov(sal.psu.cor~tank, data=.)%>%
  summary()
#no difference 

daily_calc.short_parental%>%
  filter(date>"2022-10-13")%>%
  aov(par.center~tank, data=.)%>%
  summary()
#no difference

daily_calc.short_parental%>%
  filter(date>"2022-10-13")%>%
  aov(flow.L.min~tank, data=.)%>%
  summary()
#no difference 
```

There is no difference between tanks for the parental holding period at ambient.

