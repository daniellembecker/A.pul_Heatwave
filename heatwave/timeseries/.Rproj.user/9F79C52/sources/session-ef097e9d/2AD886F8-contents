---
title: "Photographic_Bleaching"
author: "EL Strand"
edited by: "DM Becker-Polinski and HM Putnam"
date: "8/23/2021"
output:
  html_document: default
  pdf_document: default
---

# Loading in required libraries. 
```{r, include=FALSE}
library("vegan")
library("tidyverse")
library("lme4")
library("plotrix")
if ("EnvStats" %in% rownames(installed.packages()) == 'FALSE') install.packages('EnvStats') 
library("EnvStats")
library("car")
library("MuMIn")
if ("ggstatsplot" %in% rownames(installed.packages()) == 'FALSE') install.packages('ggstatsplot') 
library("ggstatsplot")

```

# Reading in quality controlled color data.
Protocol for ImageJ Bleaching Score Analysis found [here](https://emmastrand.github.io/EmmaStrand_Notebook/ImageJ-Analysis-Protocols/).  
```{r}
Data <- read.csv("../../RAnalysis/data/color_score/color_score_colonies.csv", header=T, sep=",", na.string="NA") #read in data file
Data <-na.omit(Data) # removing all rows with NA values
Data$SP.Time.ID <- paste0(Data$ColonyID, "_",Data$Photo_date, "_", Data$treatment)# generating a grouping factor

#make photo.date a factor
Data$Photo_date = as.factor(Data$Photo_date)

```

Normalize coral color to color standards. 
```{r}
Data$Red.Norm.Coral <- Data$Red_coral/Data$Red_standard #normalize to standard
Data$Green.Norm.Coral <- Data$Green_coral/Data$Green_standard #normalize to standard
Data$Blue.Norm.Coral <- Data$Blue_coral/Data$Blue_standard #normalize to standard
```

# Principal components analysis to reduce color score to single value representing the majority of the variance
```{r}

score <- Data %>% select("ColonyID", "treatment", "genotype", "tank.num", "Photo_date", "Period","SP.Time.ID", "Red.Norm.Coral","Green.Norm.Coral", "Blue.Norm.Coral") #select columns from dataframe
blch.scor <- score  %>% select("Red.Norm.Coral","Green.Norm.Coral", "Blue.Norm.Coral") #subset dataframe for score matrix only
blch.scor <- as.matrix(blch.scor) #create matrix
rownames(blch.scor) <- score$SP.Time.ID #name columns in matrix

dist <- vegdist(blch.scor, method="euclidean") #calculate distance matrix of color scores

PCA.color <- princomp(dist) #run principal components analysis
PCA.color # view variance explained by PCs

Blch <- as.data.frame(-PCA.color$scores[,1]) #extract PC1
Blch$SP.Time.ID <- rownames(blch.scor) # add the sample names to the bleahcing score

Blch  <- left_join(Blch, Data, by="SP.Time.ID") #make a dataframe of PC1 and experiment factors
colnames(Blch) #view column names
names(Blch)[1] <- "Bleaching.Score" #name column

hist(Blch$Bleaching.Score)

```

# Plot data for outliers and Write out Color Score dataframe 
```{r}

Blch.meanse <- Blch %>% group_by(treatment, Photo_date) %>% #group data by factors
  summarise(mean = mean(Bleaching.Score), #calculate mean by group
            sem = std.error(Bleaching.Score)) #calculate sem by group

# Assign labels to use for figure
#species.names <- list(
#  'Mcapitata'="Montipora capitata",
#  'Pacuta'="Pocillopora acuta")
#species_labeller <- function(variable,value){
#  return(species.names[value])}

cols <- c( "darkblue", "red3") #set colors

pdf("../../RAnalysis/output/color_score/colorscore_with_outliers_colonies.pdf")
Blch_plot1 <- ggplot(Blch.meanse, aes(x=Photo_date, y = mean, group = treatment, color = treatment)) +
  geom_line() + geom_point() + #plot points and lines
  #facet_grid(~Species, scales = "free", labeller = species_labeller) + #facet by Species
  geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.2) + #plot sem error bars
  scale_color_manual(values = cols) + #color points
  xlab("Timepoint") + #label x axis
  ylab("Color Score") + # label y axis
  theme_classic() + #set theme
  theme(legend.position = c(0.1,0.3)) + #set legend position
  theme(legend.text = element_text(size = 7)) + #set legend text size
  theme(legend.title = element_text(size = 9)) + #set legend text title size
  geom_vline(xintercept = c(7.8), colour="black", linetype="dotted") + #add vertical line
  theme(plot.title = element_text(face = 'bold.italic', size = 12, hjust = 0)) +  #set font
  #scale_x_discrete(breaks = c("Week1", "Week2", "Week4", "Week6", "Week8", "Week12", "Week16"), labels = c("1 week", "2 week", "4 week", "6 week", "8 week", "12 week", "16 week")) + #set breaks
  theme(axis.text.x = element_text(angle = 60, vjust = 1.2, hjust = 1.3)) + #Set the text angle
  theme(panel.border = element_blank(), #set theme
  panel.grid.major = element_blank(),  #set theme
  panel.grid.minor = element_blank(),  #set theme
  # Change axis line
  axis.line = element_line(colour = "black")) 
Blch_plot1 #view plot
dev.off()

Blch_plot1

write.table(Blch, file = "../../RAnalysis/output/color_score/color_score_colony_output.csv", append = FALSE, quote = TRUE, sep = ",", eol = "\n", na = "NA", dec = ".", row.names = TRUE, col.names = TRUE, qmethod = c("escape", "double"), fileEncoding = "")


```

# Detect and Remove Outliers
```{r}

hist(Blch$Bleaching.Score) #view data distribution

Blch$group <- paste0(Blch$treatment,"_", Blch$Photo_date)

#identify outliers
outlier.plot <- ggbetweenstats(Blch,group, Bleaching.Score, outlier.tagging = TRUE)
outlier.plot


#set quantile values
q <- c(0.25, 0.75)

# calculate quantile values by time and Treatment groups
Quants <- Blch %>%
  group_by(treatment, Photo_date) %>%
  summarize(quant25 = quantile(Bleaching.Score, probs = q[1]),
            quant75 = quantile(Bleaching.Score, probs = q[2]),
            IQRbyGroup=IQR(Bleaching.Score))

# add a group name by pasting Time and Treatment
Quants$group <-paste0(Quants$treatment,"_", Quants$Photo_date)

#Calculate Quantile upper and lower ranges 
Quants$upper <-  Quants$quant75+1.5*Quants$IQRbyGroup # Upper Range  
Quants$lower <- Quants$quant25-1.5*Quants$IQRbyGroup # Lower Range

#join outlier cutoffs with rate data
data <- left_join(Blch, Quants)

#remove outliers from rates
data <- data %>%
  filter(Bleaching.Score < upper) %>%
  filter(Bleaching.Score > lower) 

# Visualize data following outlier removal
r_plot<-data %>%
    ggplot(., aes(x = Photo_date, y = Bleaching.Score, colour=treatment)) +
    geom_point(aes(fill=treatment, group=interaction(treatment, Photo_date)), pch = 21, size=2, alpha=0.5) + 
    xlab("Time Point") + 
    scale_fill_manual(name="treatment", values=c("#3450A3","#E9A33D"))+
    scale_color_manual(name="treatment", values=c("#3450A3","#E9A33D"))+
    ylab("Color Score") +
    theme_classic() + 
    theme(legend.position="none",
      axis.title=element_text(face="bold", size=16),
      axis.text=element_text(size=12, color="black"), 
      legend.title=element_text(face="bold", size=14), 
      legend.text=element_text(size=12)); r_plot

```

# Testing Transformations 
```{r}
#Our random factor is `(1|PLUG.ID)` because fragments were repeatedly measured
Color_sqrt <- lmer(((Bleaching.Score+500)^(1/2)) ~ treatment*Photo_date + (1|ColonyID), na.action=na.omit, data=data) 
par(mfrow = c(2, 2))
hist(residuals(Color_sqrt)) #view distribution
boxplot(residuals(Color_sqrt)) #view distribution
qqPlot(residuals(Color_sqrt)) #view qq
plot(fitted(Color_sqrt), residuals(Color_sqrt)) #view variance

Color_qrt <- lmer(((Bleaching.Score+500)^(1/4)) ~ treatment*Photo_date + (1|ColonyID), na.action=na.omit, data=data) 
par(mfrow = c(2, 2))
hist(residuals(Color_qrt))#view distribution
boxplot(residuals(Color_qrt))#view distribution
qqPlot(residuals(Color_qrt))#view qq
plot(fitted(Color_qrt), residuals(Color_qrt))#view variance

Color_log <- lmer(log10((Bleaching.Score+500)) ~ treatment*Photo_date + (1|ColonyID), na.action=na.omit, data=data)
par(mfrow = c(2, 2))
hist(residuals(Color_log))#view distribution
boxplot(residuals(Color_log))#view distribution
qqPlot(residuals(Color_log))#view qq
plot(fitted(Color_log), residuals(Color_log))#view variance

Color_sq <- lmer(((Bleaching.Score+500)^2) ~ treatment*Photo_date + (1|ColonyID), na.action=na.omit, data=data)
par(mfrow = c(2, 2))
hist(residuals(Color_sq))#view distribution
boxplot(residuals(Color_sq))#view distribution
qqPlot(residuals(Color_sq))#view qq
plot(fitted(Color_sq), residuals(Color_sq))#view variance

#The data transformation chosen was 
```

# Analyze Color Score using Mixed effect modeling and Plot data
```{r}
Color_sq <- lmer(((Bleaching.Score+500)^2) ~ treatment*Photo_date + (1|ColonyID), na.action=na.omit, data=data)

## significance of model
Anova(Color_sq, ddf="lme4", type='III') # Type III Wald chi-square tests, test the significance of each term in the model (main effects and interaction) while considering the presence of all other terms

Blch.meanse <- data %>% group_by(treatment, Photo_date) %>% #group data by factors
  summarise(mean = mean(Bleaching.Score), #calculate mean by group
            sem = std.error(Bleaching.Score)) #calculate sem by group

pdf("../../RAnalysis/output/color_score/colorscore_without_outliers_colonies.pdf")
png("../../RAnalysis/output/color_score/colorscore_without_outliers_colonies.png")


# Convert Photo_date to date format and format as MM/DD
Blch.meanse$Formatted_date <- format(as.Date(as.character(Blch.meanse$Photo_date), format = "%Y%m%d"), "%m/%d")


Blch_plot2 <- ggplot(Blch.meanse, aes(x=Formatted_date, y = mean, group = treatment, color = treatment)) +
  geom_line() + geom_point() + #plot points and lines
  geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.2) + #plot sem error bars
  scale_color_manual(values = cols) + #color points
  xlab("Photo Date") + #label x axis
  ylab("Color Score") + # label y axis
    theme_classic() + 
    theme(
      legend.title=element_text(face="bold", size=20),
      legend.text=element_text(size=20),
      legend.position = "none",
      axis.title=element_text(face="bold", size=30),
      axis.text.x = element_text(angle = 60, vjust = 1.2, hjust = 1.3), #Set the text angle
      axis.text=element_text(size=30, color="black"), 
      strip.text.x=element_text(face="italic", size=20),
  # Change axis line
  axis.line = element_line(colour = "black")) 


Blch_plot2 #view plot
dev.off()

Blch_plot2

# save final blch_plot2
ggsave(filename="../../RAnalysis/output/color_score/bleach_plot_final.pdf", plot=Blch_plot2, dpi=300, width=10, height=10, units="in")
ggsave(filename="../../RAnalysis/output/color_score/bleach_plot_final.png", plot=Blch_plot2, dpi=300, width=5, height=5, units="in")


```

