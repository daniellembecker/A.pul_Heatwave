---
title: "Univariate analysis of heatwave time series biological data"
author: "Ariana S Huffmyer, E5 RoL Team"
edited by: "DM Becker-Polinski"
date: "20220830"
output: github_document
editor_options: 
  chunk_output_type: console
--- 

# Set Up    
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

```{r}
## install packages if you dont already have them
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("ggplot2")) install.packages("ggplot2")
if (!require("RColorBrewer")) install.packages("RColorBrewer")
if (!require("lme4")) install.packages("lme4")
if (!require("lmerTest")) install.packages("lmerTest")
if (!require("car")) install.packages("car")
if (!require("effects")) install.packages("effects")
if (!require("ggfortify")) install.packages("ggfortify")
if (!require("cowplot")) install.packages("cowplot")
if (!require("vegan")) install.packages("vegan")
if (!require("corrr")) install.packages("corrr")
if (!require("ggcorrplot")) install.packages("ggcorrplot")
if (!require("GGally")) install.packages("GGally")
if (!require("broom")) install.packages("broom")
if (!require("cowplot")) install.packages("cowplot")
if (!require("emmeans")) install.packages("emmeans")
if (!require("multcompView")) install.packages("multcompView")
if (!require("rmarkdown")) install.packages("rmarkdown")

# load packages
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(rmarkdown)
library(multcompView)
library(lme4)
library(lmerTest)
library(car)
library(effects)
library(ggfortify)
library(cowplot)
library(vegan)
library(corrr)
library(emmeans)
library(ggcorrplot)
library(GGally)
library(broom)
library(cowplot)
```

# Load dataframe

Load in master dataframe generated from 1_assemble_physiological_data.Rmd  
```{r}
master <-read.csv("timeseries_analysis/Output/master_timeseries.csv")

#remove notes column to remove NAs
master <- master[, -29]  # Remove the 28th column

# Mapping of timepoints to corresponding dates
master <- master %>%
  mutate(formatted_date = case_when(
    timepoint == "TP1" ~ "03/19",
    timepoint == "TP2" ~ "03/26",
    timepoint == "TP3" ~ "03/31",
    timepoint == "TP4" ~ "04/10",
    timepoint == "TP5" ~ "04/18",
    TRUE ~ as.character(timepoint)  # Keep original date for other cases if needed
  ))

```

### Univariate Analysis  

Build a mixed model for univariate analysis and examine data distribution.

# Remove initial timepoint from analysis because we want to see differences in treatments that start at timepoint 2 across experimental timepoints 

```{r}
master.filtered <- master %>%
  filter(!is.na(treatment) & treatment != "initial") 

```


# For symbiont densities 

`sym_model<-lmer(cells.cm2~timepoint+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
sym_model<-lmer(cells.cm2~timepoint*treatment + (1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(sym_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`sym_model<-lmer(log(cells.cm2~timepoint+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
sym_model<-lmer(log(cells.cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(sym_model))
```

Generate a Type III Anova of model.    

```{r}
anova(sym_model, type="III")

# run post hoc on timepoints
emm.sym <-emmeans(sym_model, ~ timepoint)
pairs(emm.sym)

# Generate letter-based groupings
cld_result_sym <- multcomp::cld(emm.sym, Letters = letters)
letters_data_sym_og <- as.data.frame(cld_result_sym)

# Calculate means per treatment to calculate percent change
means_per_treatment <- master %>%
  group_by(treatment) %>%
  summarise(mean_sym = mean(cells.cm2))

means_per_treatment

```

Main effects of treatment and timepoint are significant but timepoint:treatment are not.

Type III Analysis of Variance Table with Satterthwaite's method
                    Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
timepoint           3.2576 1.08588     3    66  8.5241 7.278e-05 ***
treatment           1.9183 1.91831     1    22 15.0586 0.0008067 ***
timepoint:treatment 0.7863 0.26209     3    66  2.0574 0.1143453 

# For chla

`chla_model<-lmer(chla.ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
chla_model<-lmer(chla.ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(chla_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`chla_model<-lmer(log(chla.ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered))` 

```{r}
chla_model<-lmer(log(chla.ug.cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(chla_model))
```

Generate a Type III Anova of model.    

```{r}
anova(chla_model, type="III")

# run post hoc on timepoints
emm.chla<-emmeans(chla_model, ~ timepoint)
pairs(emm.chla)

# Generate letter-based groupings
cld_result_chla <- multcomp::cld(emm.chla, Letters = letters)
letters_data_chla_og <- as.data.frame(cld_result_chla)

# Calculate means per treatment to calculate percent change
means_per_treatment <- master.filtered %>%
  group_by(treatment) %>%
  summarise(mean_chl = mean(chla.ug.cm2))

means_per_treatment

```

Main effects of timepoint are significant but timepoint:treatment are not.

Type III Analysis of Variance Table with Satterthwaite's method
                    Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
timepoint           6.2643 2.08810     3    88 24.2260 1.609e-11 ***
treatment           1.0872 1.08722     1    88 12.6139 0.0006177 ***
timepoint:treatment 0.0512 0.01705     3    88  0.1978 0.8976064  

# For chlc

`chlc_model<-lmer(chlc2.ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
chlc_model<-lmer(chlc2.ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(chlc_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`chlc_model<-lmer(log(chlc2.ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered))` 

```{r}
chlc_model<-lmer(log(chlc2.ug.cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(chlc_model))
```

Generate a Type III Anova of model.    

```{r}
anova(chlc_model, type="III")

# run post hoc on timepoints
emm.chlc<-emmeans(chlc_model, ~ timepoint)
pairs(emm.chlc)

# Generate letter-based groupings
cld_result_chlc <- multcomp::cld(emm.chlc, Letters = letters)
letters_data_chlc_og <- as.data.frame(cld_result_chlc)

# Calculate means per treatment to calculate percent change
means_per_treatment <- master.filtered %>%
  group_by(treatment) %>%
  summarise(mean_chlc = mean(chlc2.ug.cm2))

means_per_treatment
```

Main effects of timepoint are significant but timepoint:treatment are not.

Type III Analysis of Variance Table with Satterthwaite's method
                    Sum Sq Mean Sq NumDF DenDF  F value    Pr(>F)    
timepoint           43.663 14.5544     3    88 130.3157 < 2.2e-16 ***
treatment            1.063  1.0632     1    88   9.5192  0.002718 ** 
timepoint:treatment  0.162  0.0541     3    88   0.4841  0.694189    


# For tot chl

`tot_chl_model <- lmer(Total_Chl_cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
tot_chl_model<-lmer(Total_Chl_cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(tot_chl_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`tot_chl_model<-lmer(log(Total_Chl_cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered))` 

```{r}
tot_chl_model<-lmer(log(Total_Chl_cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(tot_chl_model))
```

Generate a Type III Anova of model.    

```{r}
anova(tot_chl_model, type="III")

# run post hoc on timepoints
emm.chl<-emmeans(tot_chl_model, ~ timepoint)
pairs(emm.chl)

# Generate letter-based groupings
cld_result_chl <- multcomp::cld(emm.chl, Letters = letters)
letters_data_chl_og <- as.data.frame(cld_result_chl)

# Calculate means per treatment to calculate percent change
means_per_treatment <- master.filtered %>%
  group_by(treatment) %>%
  summarise(mean_chlt = mean(Total_Chl_cm2))

means_per_treatment
```

Main effects of timepoint are significant but timepoint:treatment are not.

Type III Analysis of Variance Table with Satterthwaite's method
                     Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
timepoint           15.9897  5.3299     3    88 63.2825 < 2.2e-16 ***
treatment            1.1463  1.1463     1    88 13.6101  0.000389 ***
timepoint:treatment  0.0115  0.0038     3    88  0.0455  0.987017      

# For host protein

`host_prot_model<-lmer(host_prot_ug.cm2~timepoint+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
host_prot_model<-lmer(host_prot_ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(host_prot_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`host_prot_model<-lmer(log(host_prot_ug.cm2~timepoint+(1|colony_ID), na.action=na.omit, data=master.filtered))` 

```{r}
host_prot_model<-lmer(log(host_prot_ug.cm2)~timepoint*treatment+(1|colony_ID), data=master.filtered)
qqPlot(residuals(host_prot_model))
```

Generate a Type III Anova of model.    

```{r}
anova(host_prot_model, type="III")
```

No significance in main effects or interaction

Type III Analysis of Variance Table with Satterthwaite's method
                     Sum Sq  Mean Sq NumDF DenDF F value Pr(>F)
timepoint           0.45083 0.150275     3    66  1.9570 0.1290
treatment           0.01145 0.011448     1    22  0.1491 0.7031
timepoint:treatment 0.07545 0.025150     3    66  0.3275 0.8054 

# For holo protein

`holo_prot_model<-lmer(holobiont_prot_ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
holo_prot_model<-lmer(holobiont_prot_ug.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(holo_prot_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`holo_prot_model<-lmer(log(holobiont_prot_ug.cm2~timepoint+(1|colony_ID), na.action=na.omit, data=master.filtered))` 

```{r}
holo_prot_model<-lmer(log(holobiont_prot_ug.cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(holo_prot_model))
```

Generate a Type III Anova of model.    

```{r}
anova(holo_prot_model, type="III")

# run post hoc on timepoints
emm.holo.prot<-emmeans(holo_prot_model, ~ timepoint)
pairs(emm.holo.prot)

# Generate letter-based groupings
cld_result_holo_prot <- multcomp::cld(emm.holo.prot, Letters = letters)
letters_data_holo_prot_og <- as.data.frame(cld_result_holo_prot)

```

Main effects of timepoint are significant but treatmment and timepoint:treatment are not.

Type III Analysis of Variance Table with Satterthwaite's method
                     Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    
timepoint           2.12857 0.70952     3    66  9.4473 2.814e-05 ***
treatment           0.00402 0.00402     1    22  0.0535    0.8192    
timepoint:treatment 0.03478 0.01159     3    66  0.1544    0.9265    


# For sym biomass

`sym_bio_model<-lmer(Sym_AFDW.mg.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
sym_bio_model<-lmer(Sym_AFDW.mg.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(sym_bio_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`sym_bio_model<-lmer(log(Sym_AFDW.mg.cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
sym_bio_model<-lmer(log(Sym_AFDW.mg.cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(sym_bio_model))
```

Generate a Type III Anova of model.    

```{r}
anova(sym_bio_model, type="III")

# run post hoc on timepoints
emm.sym.bio<-emmeans(sym_bio_model, ~ timepoint:Treatment)
pairs(emm.sym.bio)

# Generate letter-based groupings
cld_result_sym_bio <- multcomp::cld(emm.sym.bio, Letters = letters)
letters_data_sym_bio_og <- as.data.frame(cld_result_sym_bio)

```

Main effects of timepoint and treatment are significant.

Type III Analysis of Variance Table with Satterthwaite's method
                    Sum Sq Mean Sq NumDF DenDF F value   Pr(>F)   
timepoint           1.2456 0.41521     3    88  3.1817 0.027826 * 
treatment           1.0452 1.04515     1    88  8.0090 0.005766 **
timepoint:treatment 1.6369 0.54565     3    88  4.1813 0.008129 **


# For host biomass

`host_bio_model<-lmer(Host_AFDW.mg.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
host_bio_model<-lmer(Host_AFDW.mg.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(host_bio_model))
```

Residuals are not normally distributed. Attempt with log transformation.      

`host_bio_model<-lmer(log(Host_AFDW.mg.cm2~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)` 

```{r}
host_bio_model<-lmer(log(Host_AFDW.mg.cm2)~timepoint*treatment+(1|colony_ID), na.action=na.omit, data=master.filtered)
qqPlot(residuals(host_bio_model))
```

Generate a Type III Anova of model.    

```{r}
anova(host_bio_model, type="III")

# run post hoc on timepoints
emm.host.bio<-emmeans(host_bio_model, ~ timepoint:Treatment)
pairs(emm.host.bio)

# Generate letter-based groupings
cld_result_host_bio <- multcomp::cld(emm.host.bio, Letters = letters)
letters_data_host_bio_og <- as.data.frame(cld_result_host_bio)

```

Main effects of timepoint and treatment are significant.

Type III Analysis of Variance Table with Satterthwaite's method
                     Sum Sq Mean Sq NumDF DenDF F value   Pr(>F)   
timepoint           0.76892 0.25631     3    88  2.7255 0.048937 * 
treatment           0.54828 0.54828     1    88  5.8304 0.017822 * 
timepoint:treatment 1.46134 0.48711     3    88  5.1800 0.002419 **


# Univariate Responses  

Plot univariate response plots and then generate panel of all plots at the end of this section. Individual plots will not be displayed. 

### Plot: Symbiont Densities
 
View by treatment and timepoint.
```{r}
# Extract relevant columns from the compact letter display for post hoc data
letters_data_sym <- letters_data_sym_og %>%
  select(timepoint, .group)

# Create a new row for TP1
new_row <- data.frame(
  timepoint = "TP1",
  .group = "na"
)

# Append the new row to the dataframe
letters_data_sym <- rbind(letters_data_sym, new_row)

# Prepare your plotting data by filtering and merging with the letters_data_sym
plot_data_sym <- master %>%
  filter(!is.na(cells.cm2)) %>%
  filter(!is.na(timepoint)) %>%
  select(fragment_ID, timepoint, formatted_date, treatment, cells.cm2) %>%
  left_join(letters_data_sym, by = "timepoint")

#remove outlier cells.cm for plot from TP3
plot_data_sym <- plot_data_sym %>%
  filter(cells.cm2 < 3000000)

# Define the specific timepoint
specific_timepoint <- "TP5"

# Define the sym threshold for outlier detection
threshold <- 1.5e+06

# Filter the data to remove the outlier point at timepoint 5
plot_data_sym <- plot_data_sym %>%
  filter(!(timepoint == specific_timepoint & cells.cm2 > threshold))

# Summarize the CLD data to get one letter per timepoint
cld_summary_sym <- plot_data_sym %>%
  group_by(timepoint, formatted_date, treatment) %>%
  summarise(.group = first(.group), max_y = max(cells.cm2)) %>%
  distinct(timepoint, .keep_all = TRUE)  # Keep only one row per timepoint

# Remove any additional attributes (if any) while keeping it a dataframe
cld_summary_sym <- as.data.frame(cld_summary_sym)

#create plot
symbplot_cm2 <- ggplot(plot_data_sym, aes(x = formatted_date, y = cells.cm2, fill = treatment)) +
  geom_boxplot(outlier.size = 0) +
  geom_point(pch = 21, size = 2, position = position_jitterdodge(0.2)) + 
  geom_text(data = cld_summary_sym, aes(x = formatted_date, y = max_y - 0.05 * max_y, label = .group), size = 8, vjust = -0.5,fontface = "bold") + # Add letters
  scale_fill_manual(values = c("darkblue", "red", "gray"), labels = c("ambient", "hot", "initial")) +
  labs(fill = "Treatment") +
  scale_y_continuous(labels = scales::label_scientific()) + # Use scientific notation on y-axis
  xlab("Timepoint") + 
  ylab(expression(bold(paste("Symbiont Cells cm"^-2)))) +
  theme_classic() + 
  theme(
    legend.position = c(.99, .95),
    legend.justification = c("right", "top"),
    legend.title = element_text(face = "bold", size = 30),
    legend.text = element_text(size = 28),
    axis.title = element_text(face = "bold", size = 30),
    axis.text = element_text(size = 30, color = "black"), 
    strip.text.x = element_text(face = "italic", size = 20)
  ); symbplot_cm2

```

### Plot: Host Protein   

View by treatment and timepoint.    
```{r}
#remove outlier host prot mg.cm2 for plot from TP3, TP5, and TP1
master.host.prot <- master %>%
  filter(host_prot_mg.cm2 < 1.00)

master.host.prot <- master.host.prot %>%
  filter(host_prot_mg.cm2 > 0.20)

#create plot
host_prot_cm2<-master.host.prot %>%
  filter(!is.na(host_prot_mg.cm2)) %>%
  filter(!is.na(timepoint))%>%
  select(fragment_ID, timepoint, formatted_date, treatment, host_prot_mg.cm2)%>%
  
  ggplot(., aes(x = formatted_date, y = host_prot_mg.cm2, fill = treatment)) +
    geom_boxplot(outlier.size = 0) +
    geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) + 
    scale_fill_manual(values = c("darkblue", "red", "gray"), labels=c("ambient", "hot", "initial"))+
    labs(fill = "Treatment") +
    #facet_wrap(~timepoint) +
    xlab("Timepoint") + 
    ylab(expression(bold(paste("Host Protein ( mg cm"^-2, ")"))))+
    theme_classic() + 
    theme(
      legend.title=element_text(face="bold", size=30),
      legend.text=element_text(size=28),
      legend.position = "none",
      axis.title=element_text(face="bold", size=30),
      axis.text=element_text(size=30, color="black"), 
      strip.text.x=element_text(face="italic", size=20)
      ); host_prot_cm2
```

### Plot: Holobiont protein  

View by treatment and timepoint.   
```{r}
# Extract relevant columns from the compact letter display for post hoc data
letters_data_holo_prot <- letters_data_holo_prot_og %>%
  select(timepoint, .group)

# Create a new row for TP1
new_row <- data.frame(
  timepoint = "TP1",
  .group = "na"
)

# Append the new row to the dataframe
letters_data_holo_prot <- rbind(letters_data_holo_prot, new_row)

# Prepare your plotting data by filtering and merging with the letters_data_sym
plot_data_holo_prot <- master %>%
  filter(!is.na(cells.cm2)) %>%
  filter(!is.na(timepoint)) %>%
  select(fragment_ID, timepoint, formatted_date, treatment, holobiont_prot_mg.cm2) %>%
  left_join(letters_data_holo_prot, by = "timepoint")

#remove outlier holo prot mg.cm2 for plot from TP3, TP5
plot_data_holo_prot <- plot_data_holo_prot %>%
  filter(holobiont_prot_mg.cm2 < 1.25)

# Summarize the CLD data to get one letter per timepoint
cld_summary_holo_prot <- plot_data_holo_prot %>%
  group_by(timepoint, formatted_date, treatment) %>%
  summarise(.group = first(.group), max_y = max(holobiont_prot_mg.cm2)) %>%
  distinct(timepoint, .keep_all = TRUE)  # Keep only one row per timepoint

# Remove any additional attributes (if any) while keeping it a dataframe
cld_summary_holo_prot <- as.data.frame(cld_summary_holo_prot)

#create plot
holobiont_prot_cm2 <- ggplot(plot_data_holo_prot, aes(x = formatted_date, y = holobiont_prot_mg.cm2, fill = treatment)) +
    geom_boxplot(outlier.size = 0) +
    geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) +
    geom_text(data = cld_summary_holo_prot, aes(x = formatted_date, y = max_y + 0.05 * max_y, label = .group), size = 8, vjust = -0.5, fontface = "bold") + # Add letters
    scale_fill_manual(values = c("darkblue", "red", "gray"), labels=c("ambient", "hot", "initial"))+
    labs(fill = "Treatment") +
    #facet_wrap(~timepoint) +
    xlab("Timepoint") + 
    ylab(expression(bold(paste("Holobiont Protein (mg cm"^-2, ")"))))+
    theme_classic() + 
     theme(
      legend.title=element_text(face="bold", size=20),
      legend.text=element_text(size=20),
      legend.position = "none",
      axis.title=element_text(face="bold", size=30),
      axis.text=element_text(size=30, color="black"), 
      strip.text.x=element_text(face="italic", size=20)
      ); holobiont_prot_cm2
```

### Plot: CHL-a
View by treatment and timepoint.   
```{r}
#remove outlier chla.ug cm2 for plot from TP3, TP5
# master.chl <- master %>%
#   filter(chla.ug.cm2 < 5.50)
# 
# #create plot
# chla_cm2<-master.chl %>%
#   filter(!is.na(chla.ug.cm2)) %>%
#   filter(!is.na(timepoint))%>%
#   select(fragment_ID, timepoint, formatted_date, treatment, chla.ug.cm2)%>%
#   
#   ggplot(., aes(x = formatted_date, y = chla.ug.cm2, fill = treatment)) +
#     geom_boxplot(outlier.size = 0) +
#     geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) + 
#     scale_fill_manual(values = c("darkblue", "red", "gray"), labels=c("ambient", "hot", "initial"))+
#     labs(fill = "Treatment") +
#     #facet_wrap(~timepoint) +
#     xlab("Timepoint") + 
#     ylab(expression(bold(paste("Chlorophyll a (", mu, "g cm"^-2, ")"))))+
#     theme_classic() + 
#     theme(
#       legend.title=element_text(face="bold", size=20),
#       legend.text=element_text(size=20),
#       legend.position = "none",
#       axis.title=element_text(face="bold", size=30),
#       axis.text=element_text(size=30, color="black"), 
#       strip.text.x=element_text(face="italic", size=20)
#       ); chla_cm2
```

### Plot: CHL-c

View by treatment and timepoint.   
```{r}
# # Define the specific timepoint
# specific_timepoint <- "TP5"
# 
# # Define the chlc2.ug.cm2 threshold for outlier detection
# threshold <- 1.88
# 
# # Filter the data to remove the outlier point at timepoint 5
# filtered_master <- master %>%
#   filter(!(timepoint == specific_timepoint & chlc2.ug.cm2 > threshold))
# 
# #create plot
# chlc_prot_cm2<-filtered_master %>%
#   filter(!is.na(chlc2.ug.cm2)) %>%
#   filter(!is.na(timepoint))%>%
#   select(fragment_ID, timepoint, formatted_date, treatment, chlc2.ug.cm2)%>%
#   
#   ggplot(., aes(x = formatted_date, y = chlc2.ug.cm2, fill = treatment)) +
#     geom_boxplot(outlier.size = 0) +
#     geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) + 
#     scale_fill_manual(values = c("darkblue", "red", "gray"), labels=c("ambient", "hot", "initial"))+
#     labs(fill = "Treatment") +
#     #facet_wrap(~timepoint) +
#     xlab("Timepoint") + 
#     ylab(expression(bold(paste("Chlorophyll c2 (", mu, "g cm"^-2, ")"))))+
#     theme_classic() + 
#     theme(
#       legend.title=element_text(face="bold", size=20),
#       legend.text=element_text(size=20),
#       legend.position = "none",
#       axis.title=element_text(face="bold", size=30),
#       axis.text=element_text(size=30, color="black"), 
#       strip.text.x=element_text(face="italic", size=20)
#       ); chlc_prot_cm2
```

### Plot: total CHL

View by treatment and timepoint.   
```{r}

# Extract relevant columns from the compact letter display for post hoc data
letters_data_chl <- letters_data_chl_og %>%
  select(timepoint, .group)

# Create a new row for TP1
new_row <- data.frame(
  timepoint = "TP1",
  .group = "na"
)

# Append the new row to the dataframe
letters_data_chl <- rbind(letters_data_chl, new_row)

# Prepare your plotting data by filtering and merging with the letters_data_sym
plot_data_chl <- master %>%
  filter(!is.na(Total_Chl_cm2)) %>%
  filter(!is.na(timepoint)) %>%
  select(fragment_ID, timepoint, formatted_date, treatment, Total_Chl_cm2) %>%
  left_join(letters_data_chl, by = "timepoint")

# Define the specific timepoint
specific_timepoint <- "TP5" 

# Define the total chl threshold for outlier detection
threshold <- 5

# Filter the data to remove the outlier point at timepoint 5
plot_data_chl <- plot_data_chl %>%
  filter(!(timepoint == specific_timepoint & Total_Chl_cm2 > threshold))

# filter outlier for tp3
plot_data_chl <- plot_data_chl %>%
  filter(Total_Chl_cm2 < 10)

# Summarize the CLD data to get one letter per timepoint
cld_summary_chl <- plot_data_chl %>%
  group_by(timepoint, formatted_date, treatment) %>%
  summarise(.group = first(.group), max_y = max(Total_Chl_cm2)) %>%
  distinct(timepoint, .keep_all = TRUE)  # Keep only one row per timepoint

# Remove any additional attributes (if any) while keeping it a dataframe
cld_summary_chl <- as.data.frame(cld_summary_chl)

#create plot
tot_chl <- ggplot(plot_data_chl, aes(x = formatted_date, y = Total_Chl_cm2, fill = treatment)) +
    geom_boxplot(outlier.size = 0) +
    geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) + 
    geom_text(data = cld_summary_chl, aes(x = formatted_date, y = max_y + 0.05 * max_y, label = .group), size = 8, vjust = -0.5,fontface = "bold") + # Add letters
    scale_fill_manual(values = c("darkblue", "red", "gray"), labels=c("ambient", "hot", "initial"))+
    labs(fill = "Treatment") +
    #facet_wrap(~timepoint) +
    xlab("Timepoint") + 
    ylab(expression(bold(paste("Total Chlorophyll (", mu, "g cm"^-2, ")"))))+
    theme_classic() + 
    theme(
      legend.title=element_text(face="bold", size=20),
      legend.text=element_text(size=20),
      legend.position = "none",
      axis.title=element_text(face="bold", size=30),
      axis.text=element_text(size=30, color="black"), 
      strip.text.x=element_text(face="italic", size=20)
      ); tot_chl
```


### Plot: sym biomass
View by treatment and timepoint.   
```{r}
# Extract relevant columns from the compact letter display for post hoc data
letters_data_sym_bio <- letters_data_sym_bio_og %>%
  select(timepoint, .group)

# Create a new row for TP1
new_row <- data.frame(
  timepoint = "TP1",
  .group = "na"
)

# Append the new row to the dataframe
letters_data_sym_bio <- rbind(letters_data_sym_bio, new_row)

# Prepare your plotting data by filtering and merging with the letters_data_sym
plot_data_sym_bio <- master %>%
  filter(!is.na(cells.cm2)) %>%
  filter(!is.na(timepoint)) %>%
  select(fragment_ID, timepoint, formatted_date, treatment, Sym_AFDW.mg.cm2) %>%
  left_join(letters_data_sym_bio, by = "timepoint")

#remove outlier chla.ug cm2 for plot from TP3, TP5
plot_data_sym_bio <- plot_data_sym_bio %>%
  filter(Sym_AFDW.mg.cm2 < 1.6)

# Define the specific timepoint
specific_timepoint <- "TP5"

# Define the chlc2.ug.cm2 threshold for outlier detection
threshold <- 1.3

# Filter the data to remove the outlier point at timepoint 5
plot_data_sym_bio <- plot_data_sym_bio %>%
  filter(!(timepoint == specific_timepoint & Sym_AFDW.mg.cm2 > threshold))

# Summarize the CLD data to get one letter per timepoint
cld_summary_sym_bio <- plot_data_sym_bio %>%
  group_by(timepoint, formatted_date, treatment) %>%
  summarise(.group = first(.group), max_y = max(Sym_AFDW.mg.cm2)) %>%
  distinct(timepoint, .keep_all = TRUE)  # Keep only one row per timepoint

# Remove any additional attributes (if any) while keeping it a dataframe
cld_summary_sym_bio <- as.data.frame(cld_summary_sym_bio)

#create plot
sym.bio <- ggplot(plot_data_sym_bio, aes(x = formatted_date, y = Sym_AFDW.mg.cm2, fill = treatment)) +
    geom_boxplot(outlier.size = 0) +
    geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) + 
    geom_text(data = cld_summary_sym_bio, aes(x = formatted_date, y = max_y + 0.08 * max_y, label = .group), size = 8, vjust = -0.5,fontface = "bold") + # Add letters
    scale_fill_manual(values = c("darkblue", "red", "gray"), labels=c("ambient", "hot", "initial"))+
    labs(fill = "Treatment") +
    xlab("Timepoint") + 
    ylab(expression(bold(paste("Symbiont Tissue Biomass (mg cm"^-2, ") "))))+
    theme_classic() + 
    theme(
      legend.title=element_text(face="bold", size=20),
      legend.text=element_text(size=20),
      legend.position = "none",
      axis.title=element_text(face="bold", size=30),
      axis.text=element_text(size=30, color="black"), 
      strip.text.x=element_text(face="italic", size=20)
      ); sym.bio
```


### Plot: host biomass
View by treatment and timepoint.   
```{r}
# Extract relevant columns from the compact letter display for post hoc data
letters_data_host_bio <- letters_data_host_bio_og %>%
  select(timepoint, .group)

# Create a new row for TP1
new_row <- data.frame(
  timepoint = "TP1",
  .group = "na"
)

# Append the new row to the dataframe
letters_data_host_bio <- rbind(letters_data_host_bio, new_row)

# Prepare your plotting data by filtering and merging with the letters_data_sym
plot_data_host_bio <- master %>%
  filter(!is.na(cells.cm2)) %>%
  filter(!is.na(timepoint)) %>%
  select(fragment_ID, timepoint, formatted_date, treatment, Host_AFDW.mg.cm2) %>%
  left_join(letters_data_host_bio, by = "timepoint")

#remove outlier chla.ug cm2 for plot from TP3, TP5
plot_data_host_bio <- plot_data_host_bio %>%
  filter(Host_AFDW.mg.cm2 < 3.4)

# Summarize the CLD data to get one letter per timepoint
cld_summary_host_bio <- plot_data_host_bio %>%
  group_by(timepoint, formatted_date, treatment) %>%
  summarise(.group = first(.group), max_y = max(Host_AFDW.mg.cm2)) %>%
  distinct(timepoint, .keep_all = TRUE)  # Keep only one row per timepoint

# Remove any additional attributes (if any) while keeping it a dataframe
cld_summary_host_bio <- as.data.frame(cld_summary_host_bio)

#create plot
host.bio <- ggplot(plot_data_host_bio, aes(x = formatted_date, y = Host_AFDW.mg.cm2, fill = treatment)) +
    geom_boxplot(outlier.size = 0) +
    geom_point(pch = 21, size=2, position = position_jitterdodge(0.2)) +
     geom_text(data = cld_summary_host_bio, aes(x = formatted_date, y = max_y + 0.01 * max_y, label = .group), size = 8, vjust = -0.5,fontface = "bold") + # Add letters
    scale_fill_manual(values = c("darkblue", "red", "gray"), labels=c("ambient", "hot", "initial"))+
    labs(fill = "Treatment") +
    xlab("Timepoint") + 
    ylab(expression(bold(paste("Host Tissue Biomass (mg cm"^-2, ")"))))+
    theme_classic() + 
    theme(
      legend.title=element_text(face="bold", size=20),
      legend.text=element_text(size=20),
      legend.position = "none",
      axis.title=element_text(face="bold", size=30),
      axis.text=element_text(size=30, color="black"), 
      strip.text.x=element_text(face="italic", size=20)
      ); host.bio
```


Read in photographic bleaching color score script to extract Blch_plot2 plot and add to final phys plot
```{r}
# Run photographic bleaching script to put Blch_plot2 in with other phys data
render("../../RAnalysis/scripts/Photographic_Bleaching.Rmd")

# Blch_plot2 is now in our environment and can be used in figure
Blch_plot2
```


Join all plots for each normalization together.  

```{r}
phys_figure<-plot_grid(Blch_plot2, symbplot_cm2, tot_chl, sym.bio, host.bio, host_prot_cm2, holobiont_prot_cm2, ncol=3, nrow=3, labels = c('A', 'B', 'C', 'D', 'E', 'F', 'G'), rel_heights= c(1,1,1,1), rel_widths = c(1,1,1,1.2), label_y=1, align="h", label_size = 50)

ggsave(filename="timeseries_analysis/Figures/Phys_Figure.png", plot=phys_figure, dpi=300, width=30, height=30, units="in")
ggsave(filename="timeseries_analysis/Figures/Phys_Figure.pdf", plot=phys_figure, dpi=300, width=30, height=30, units="in")
```

